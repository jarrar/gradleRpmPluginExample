/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

makeRpm {
	doLast {
		println "- Making RPM"
	}

}


//ospackage {
//
////	installUtils file('scripts/rpm/utils.sh')
////	preInstall file('scripts/rpm/preInstall.sh')
////	postInstall file('scripts/rpm/postInstall.sh')
////	preUninstall 'touch /tmp/myfile'
////	postUninstall file('scripts/rpm/postUninstall.sh')
//
//	requires('qux')
//
//	into '/opt/foo'
//
////	from(jar.outputs.files) {
////		into 'lib'
////	}
////	from(configurations.runtime) {
////		into 'lib'
////	}
//
//	from('scripts') {
//		into 'bin'
//		exclude 'database'
//		fileMode = 0550
//	}
//}

println "DEBUG: ${OUTPUT_DIR}/module/${project.name}/RPMS"

task buildRuntimeRpm(type: Rpm) {

	packageName = 'app1-runtime'
	version = '1.2.3'
	release = '1'
	arch = I386
	os = LINUX

	into '/opt/foo'

	from('conf') {
		// Will tell redline-rpm not to auto create directories, which
		// is sometimes necessary to avoid rpm directory conflicts
		addParentDirs = false
		into 'conf'
	}

	from('data') {
		into 'data'
	}

	from('scripts') {
		into 'bin'
		exclude 'database'
		fileMode = 0550
	}

	destinationDir = project.file(OUTPUT_DIR + "/module/${project.name}/RPMS")
	destinationDir.mkdirs()

	link('/etc/init.d/foo', '/opt/foo/bin/foo.init')
}

task buildDevelRpm(type: Rpm) {

	packageName = 'app1-devel'
	version = '1.33.99'
	release = '189'
	arch = I386
	os = LINUX

	from('lib') {
		into '/usr/local/lib'
	}

	from('header') {
		into '/usr/local/include'
	}

	destinationDir = project.file(OUTPUT_DIR + "/module/${project.name}/RPMS")
	destinationDir.mkdirs()

	link('/etc/init.d/foo', '/opt/foo/bin/foo.init')
}